---
apiVersion: v1
kind: Namespace
metadata:
  name: prowlarr

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr-config
  namespace: prowlarr
spec:
  accessModes: ["ReadWriteMany"]
  storageClassName: nfs-retain
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: prowlarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      containers:
      - name: prowlarr
        image: lscr.io/linuxserver/prowlarr:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 9696
        env:
          - name: PUID
            value: "65534"
          - name: PGID
            value: "65534"
          - name: TZ
            value: "Europe/Brussels"
        volumeMounts:
          - name: config
            mountPath: /config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: prowlarr-config

---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  namespace: prowlarr
spec:
  selector:
    app: prowlarr
  ports:
    - name: http
      port: 80
      targetPort: 9696

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prowlarr
  namespace: prowlarr
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dns01
    traefik.ingress.kubernetes.io/router.middlewares: "default-internal-whitelist@kubernetescrd"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - prowlarr.mangelschots.org
      secretName: prowlarr-cert
  rules:
    - host: prowlarr.mangelschots.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prowlarr
                port:
                  number: 80
