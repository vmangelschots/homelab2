apiVersion: v1
kind: Namespace
metadata:
  name: scrumpoker
  labels:
    app.kubernetes.io/name: scrumpoker
    app.kubernetes.io/instance: scrumpoker
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: scrumpoker-data
  namespace: scrumpoker
spec:
  storageClassName: nfs-delete
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scrumpoker
  namespace: scrumpoker
  labels:
    app.kubernetes.io/name: scrumpoker
    app.kubernetes.io/instance: scrumpoker
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: scrumpoker
      release: scrumpoker
  template:
    metadata:
      labels:
        app: scrumpoker
        release: scrumpoker
        app.kubernetes.io/name: scrumpoker
        app.kubernetes.io/instance: scrumpoker
    spec:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
        - name: scrumpoker-data
          persistentVolumeClaim:
            claimName: scrumpoker-data
      containers:
        - name: scrumpoker
          image: axeleroy/self-host-planning-poker:latest   # consider pinning a version when you can
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            - name: PUID
              value: "568"
            - name: PGID
              value: "568"
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 20
            periodSeconds: 15
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: scrumpoker-data
              mountPath: /data
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: scrumpoker
  namespace: scrumpoker
  labels:
    app.kubernetes.io/name: scrumpoker
    app.kubernetes.io/instance: scrumpoker
spec:
  type: ClusterIP
  selector:
    app: scrumpoker
    release: scrumpoker
  ports:
    - name: http
      port: 80
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scrumpoker
  namespace: scrumpoker
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  rules:
    - host: scrumpoker.olympus.internal   
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: scrumpoker
                port:
                  number: 80

