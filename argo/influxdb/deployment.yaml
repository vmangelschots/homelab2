apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: influxdb
  labels:
    app: influxdb
spec:
  selector:
    app: influxdb
  ports:
    - name: http
      port: 80
      targetPort: 8086
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: influxdb
  namespace: influxdb
  labels:
    app: influxdb
spec:
  serviceName: influxdb
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      securityContext:
        fsGroup: 65534
      containers:
        - name: influxdb
          image: influxdb:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8086
              name: http
          envFrom:
            - secretRef:
                name: influxdb-init
          volumeMounts:
            - name: data
              mountPath: /var/lib/influxdb2
          readinessProbe:
            httpGet:
              path: /health
              port: 8086
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /health
              port: 8086
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 3
            failureThreshold: 6
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: "1"
              memory: 1Gi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: nfs-retain
        resources:
          requests:
            storage: 20Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: influxdb
  namespace: influxdb
  annotations:
    ingressClass: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: letsencrypt-dns01
    traefik.ingress.kubernetes.io/router.middlewares: "internal-whitelist"
spec:
  rules:
    - host: influxdb.mangelschots.org   
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: influxdb
                port:
                  number: 80
  tls:
    - hosts:
      - influxdb.mangelschots.org
      secretName: influxdb-tls

